[
    {
        "id": "f0020e205b0d4d02",
        "type": "tab",
        "label": "フロー 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fbe42d48d5ef483c",
        "type": "http in",
        "z": "f0020e205b0d4d02",
        "name": "",
        "url": "/users/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 360,
        "wires": [
            [
                "cd40737c5c47b59c"
            ]
        ]
    },
    {
        "id": "cd40737c5c47b59c",
        "type": "switch",
        "z": "f0020e205b0d4d02",
        "name": "id指定の有無",
        "property": "req.params.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 360,
        "wires": [
            [
                "04199d72d8639c73"
            ],
            [
                "0e37ab1d2f1df0de"
            ]
        ]
    },
    {
        "id": "63006f01d2cea77f",
        "type": "http response",
        "z": "f0020e205b0d4d02",
        "name": "http out",
        "statusCode": "",
        "headers": {},
        "x": 720,
        "y": 320,
        "wires": []
    },
    {
        "id": "0e37ab1d2f1df0de",
        "type": "change",
        "z": "f0020e205b0d4d02",
        "name": "set error info",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"message\":\"Invalid params\",\"status\":440}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "400",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 400,
        "wires": [
            [
                "63006f01d2cea77f"
            ]
        ]
    },
    {
        "id": "04199d72d8639c73",
        "type": "function",
        "z": "f0020e205b0d4d02",
        "name": "user検索",
        "func": "const users = {\n    \"a\": {\n        \"name\": \"Taro\", \"age\": 22\n    },\n    \"b\": {\n        \"name\": \"Jiro\", \"age\": 16\n    }\n}\n\nconst id = msg.req.params.id;\n\nif (users.hasOwnProperty(id)) {\n    msg.payload = users[id];\n} else {\n    msg.payload = { error: \"ユーザーが見つかりませんでした\", id: id };\n    msg.statusCode = 404;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 320,
        "wires": [
            [
                "63006f01d2cea77f"
            ]
        ]
    }
]