[
    {
        "id": "f0020e205b0d4d02",
        "type": "tab",
        "label": "php-backend",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b0836e657c45cee4",
        "type": "tab",
        "label": "sample",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9c93b5a27f1f0d8c",
        "type": "subflow",
        "name": "delayed elements",
        "info": "payloadが配列の場合のみ、2秒間隔で要素を出力。",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 120,
                "wires": [
                    {
                        "id": "fb17d1cbb12ca77b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 660,
                "y": 100,
                "wires": [
                    {
                        "id": "427bd8d015228387",
                        "port": 0
                    },
                    {
                        "id": "0bd359638a80e03e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {
            "module": "delayed-elements",
            "version": "0.1.0",
            "author": "js4000all@gmail.com",
            "desc": "payloadが配列の場合のみ、2秒間隔で要素を出力。",
            "license": "MIT"
        },
        "color": "#DDAA99"
    },
    {
        "id": "c86be1c12bedf207",
        "type": "subflow",
        "name": "ランダム分岐",
        "info": "thresholdとして出力1に分岐する確率を指定する。\n\n## 出力\n- random  \n  生成した乱数。\n- threshold  \n  ノード上で設定した閾値。\n",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 120,
                "wires": [
                    {
                        "id": "38683cb766280f58"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 720,
                "y": 100,
                "wires": [
                    {
                        "id": "49af70dc50fe7a27",
                        "port": 0
                    }
                ]
            },
            {
                "x": 720,
                "y": 160,
                "wires": [
                    {
                        "id": "49af70dc50fe7a27",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "threshold",
                "type": "num",
                "value": "0.5",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "num"
                        ]
                    }
                }
            }
        ],
        "meta": {
            "module": "random-switch",
            "version": "0.1.0",
            "author": "js4000all@gmail.com",
            "desc": "指定した確率でランダムに分岐する",
            "license": "MIT"
        },
        "color": "#DDAA99"
    },
    {
        "id": "af1f1e0a0e3be714",
        "type": "subflow",
        "name": "flush join",
        "info": "チャンクサイズごとにメッセージを配列にまとめる。\n最後のメッセージを受信してから待機秒数が経過した場合は、\nその時点で蓄積しているメッセージを配列にまとめる。\n",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "21b1e0ac64062ea9"
                    },
                    {
                        "id": "bdd72ea00d37c2ea"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 700,
                "y": 80,
                "wires": [
                    {
                        "id": "bdd72ea00d37c2ea",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "ChunkSize",
                "type": "num",
                "value": "1000",
                "ui": {
                    "label": {
                        "ja": "チャンクサイズ"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env",
                            "conf-types"
                        ]
                    }
                }
            },
            {
                "name": "WaitSeconds",
                "type": "num",
                "value": "1",
                "ui": {
                    "label": {
                        "ja": "待機秒数"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env",
                            "conf-types"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "e24847f2f9e351d8",
        "type": "group",
        "z": "b0836e657c45cee4",
        "name": "関数を定義して使い回す：flow contextに保存しておく方法",
        "style": {
            "label": true
        },
        "nodes": [
            "019b7347b3689076",
            "41d09822f1916789",
            "b91128fcf9ee2c2b",
            "c42c1e1ec887fe6c",
            "e6bfd74bb3e69eaa"
        ],
        "x": 34,
        "y": 359,
        "w": 532,
        "h": 142
    },
    {
        "id": "9fc439aff1a811ea",
        "type": "group",
        "z": "b0836e657c45cee4",
        "name": "link callによるサブルーチン",
        "style": {
            "label": true
        },
        "nodes": [
            "b0568bb261bbf464",
            "3742ce3df21d5969",
            "391962ef9f3f92d1"
        ],
        "x": 38,
        "y": 13,
        "w": 784,
        "h": 334
    },
    {
        "id": "672e1650cb510dd9",
        "type": "group",
        "z": "b0836e657c45cee4",
        "name": "サブフローサンプル",
        "style": {
            "label": true
        },
        "nodes": [
            "abe75cd6b803d317",
            "03c7cc1007694929",
            "b53f20d28cf93a9f",
            "c9ecd84f167b1985"
        ],
        "x": 34,
        "y": 519,
        "w": 672,
        "h": 142
    },
    {
        "id": "34acfae8448b43ac",
        "type": "group",
        "z": "b0836e657c45cee4",
        "name": "自力キュー",
        "style": {
            "label": true
        },
        "nodes": [
            "6ce15e22118b34e0",
            "e7ec474e6c7b0546",
            "1432fa1fe7c34b5b",
            "d07730c58261e945",
            "182b768af015a078",
            "132c0b5e6a93589a",
            "313dbed4f7397e56",
            "cd11cda063995142",
            "d047e55d49c4f7c3",
            "f4353e4389a6bc05"
        ],
        "x": 34,
        "y": 679,
        "w": 1292,
        "h": 488
    },
    {
        "id": "394b52483367cb8a",
        "type": "group",
        "z": "b0836e657c45cee4",
        "name": "ランダム分岐デモ",
        "style": {
            "label": true
        },
        "nodes": [
            "3cd70725ab98a113",
            "f77139e06707cd63",
            "681e74f1c9d9e169",
            "73346b1b78175063"
        ],
        "x": 34,
        "y": 1179,
        "w": 552,
        "h": 122
    },
    {
        "id": "4f84f1b07d401ac0",
        "type": "group",
        "z": "b0836e657c45cee4",
        "name": "各メッセージが持つ要素に対して順番に処理を実行する例",
        "style": {
            "label": true,
            "color": "#999999"
        },
        "nodes": [
            "29c9add31fba7dba",
            "c959bfd6efc54e9e",
            "cb979098d1b6e20e",
            "eb42074c43e33963",
            "e8abd482379157a9",
            "a5da87b670473d47",
            "c7e294783d9ae989",
            "adaabcbd1c6bf857",
            "c8898764c93c04b3"
        ],
        "x": 34,
        "y": 1319,
        "w": 752,
        "h": 288
    },
    {
        "id": "d1ede63e629f3ab0",
        "type": "group",
        "z": "b0836e657c45cee4",
        "name": "timeout付きバッチ送信デモ",
        "style": {
            "label": true
        },
        "nodes": [
            "afcb18c873db5d92",
            "8ff96bb61b8a35b2",
            "068796fb50e7ab41",
            "4cc08fd169a79a42",
            "646683b4ad391d0c",
            "450f6137e4299ea7"
        ],
        "x": 34,
        "y": 1619,
        "w": 738,
        "h": 328
    },
    {
        "id": "3387b5fb01dacd2d",
        "type": "group",
        "z": "b0836e657c45cee4",
        "name": "InfluxDBデータ投入デモ",
        "style": {
            "label": true
        },
        "nodes": [
            "21bfc3e854b9ad89",
            "7544f802015e8c48",
            "6a7d01488da61c34",
            "661c02a18f849ee6"
        ],
        "x": 34,
        "y": 1959,
        "w": 632,
        "h": 122
    },
    {
        "id": "0052d4989496e2d8",
        "type": "group",
        "z": "b0836e657c45cee4",
        "name": "node-red-contrib-loop使用例(メッセージが持つ各要素について同期的にフェッチ)",
        "style": {
            "label": true
        },
        "nodes": [
            "c5fb1e57032e795f",
            "f1f8a665a1dac732",
            "d664919f68f546aa",
            "7241bdd76023aa5e",
            "2a1a8ed6ff72407f",
            "95c025ffb63714dc",
            "10df7dd44d95743b",
            "139abe9fbf69808a",
            "1063b456e28e48a7",
            "56a0ace550412e9d",
            "9b308c514c03d7f8",
            "446f443d28107626",
            "c66768b2e751f3ba",
            "386f5e9e47dabe16",
            "96cb23b5c1d59c87"
        ],
        "x": 34,
        "y": 2099,
        "w": 912,
        "h": 402
    },
    {
        "id": "0cd868fae7fb89ef",
        "type": "group",
        "z": "b0836e657c45cee4",
        "name": "MariaDBへのinsert例(Bulk insert)",
        "style": {
            "label": true
        },
        "nodes": [
            "334a4aee6c6add83",
            "1ede4140a65d8d64",
            "a43b008f6a63d31f",
            "3ca52c402e3ea9ec"
        ],
        "x": 34,
        "y": 2539,
        "w": 572,
        "h": 82
    },
    {
        "id": "b0568bb261bbf464",
        "type": "group",
        "z": "b0836e657c45cee4",
        "g": "9fc439aff1a811ea",
        "name": "func length",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "fill-opacity": "0.5",
            "color": "#000000"
        },
        "nodes": [
            "f65164460314ac82",
            "6dbe6d628991d545",
            "e58e2a758922ba40"
        ],
        "x": 64,
        "y": 239,
        "w": 302,
        "h": 82,
        "info": "msg.payloadに受け取った文字列の長さをmsg.payloadとして返す。\n"
    },
    {
        "id": "3742ce3df21d5969",
        "type": "group",
        "z": "b0836e657c45cee4",
        "g": "9fc439aff1a811ea",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9b34839620502d83",
            "296118de600e8210",
            "bf6458ec5f555f70",
            "46c2ca2a51493a72"
        ],
        "x": 64,
        "y": 39,
        "w": 732,
        "h": 82
    },
    {
        "id": "391962ef9f3f92d1",
        "type": "group",
        "z": "b0836e657c45cee4",
        "g": "9fc439aff1a811ea",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e3a6bff644fad890",
            "bc1f2932862bd4bd",
            "db45b42e1f0f65b8",
            "21ff19d41a20ceb1"
        ],
        "x": 64,
        "y": 139,
        "w": 732,
        "h": 82
    },
    {
        "id": "132c0b5e6a93589a",
        "type": "group",
        "z": "b0836e657c45cee4",
        "g": "34acfae8448b43ac",
        "name": "テスト用REST API",
        "style": {
            "label": true
        },
        "nodes": [
            "2f745ae3548ce99d",
            "89af74664eafcbb8",
            "10fc73cf7410db30",
            "ac66534468c23087"
        ],
        "x": 74,
        "y": 1059,
        "w": 732,
        "h": 82
    },
    {
        "id": "313dbed4f7397e56",
        "type": "group",
        "z": "b0836e657c45cee4",
        "g": "34acfae8448b43ac",
        "name": "キュー部分(msg.resetはキューを初期化、msg.doneはキューの先頭要素を排出)",
        "style": {
            "label": true
        },
        "nodes": [
            "28d9a5423150e4f2",
            "213d69f0941b223e",
            "7738d9f2c2d896c0",
            "f10122392cbe2923",
            "32a444f412de407d",
            "31b26389a929d61d",
            "659da199870741a3"
        ],
        "x": 114,
        "y": 839,
        "w": 1032,
        "h": 82
    },
    {
        "id": "c7e294783d9ae989",
        "type": "group",
        "z": "b0836e657c45cee4",
        "g": "4f84f1b07d401ac0",
        "name": "loop for devices: メッセージごとにデバイスの数だけループする",
        "style": {
            "label": true,
            "color": "#000000",
            "fill": "#bfdbef",
            "fill-opacity": "0.5"
        },
        "nodes": [
            "85735abab5441dda",
            "206adcc2f3ffe981",
            "ce603c74cfd2b2c6",
            "2aac94f929500237",
            "3af0cc66b6fa945c"
        ],
        "x": 64,
        "y": 1499,
        "w": 692,
        "h": 82
    },
    {
        "id": "4cc08fd169a79a42",
        "type": "group",
        "z": "b0836e657c45cee4",
        "g": "d1ede63e629f3ab0",
        "name": "3つずつまとめて送信。ただし最後のメッセージから2秒後に強制送信",
        "style": {
            "label": true
        },
        "nodes": [
            "bcc6afefb9448c5f",
            "664b967ceda1d7df",
            "4c398d084bdfdfdc",
            "6d87100f5bcaa953"
        ],
        "x": 104,
        "y": 1699,
        "w": 642,
        "h": 122
    },
    {
        "id": "646683b4ad391d0c",
        "type": "group",
        "z": "b0836e657c45cee4",
        "g": "d1ede63e629f3ab0",
        "name": "受信側",
        "style": {
            "label": true
        },
        "nodes": [
            "180ffc9d1ccb6136",
            "5baf71921ad8f87e",
            "459a414946bf4a01"
        ],
        "x": 74,
        "y": 1839,
        "w": 432,
        "h": 82
    },
    {
        "id": "0bd359638a80e03e",
        "type": "junction",
        "z": "9c93b5a27f1f0d8c",
        "x": 600,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "fc2aa30ba24d6a60",
        "type": "junction",
        "z": "9c93b5a27f1f0d8c",
        "x": 240,
        "y": 140,
        "wires": [
            [
                "0bd359638a80e03e"
            ]
        ]
    },
    {
        "id": "31b26389a929d61d",
        "type": "junction",
        "z": "b0836e657c45cee4",
        "g": "313dbed4f7397e56",
        "x": 360,
        "y": 880,
        "wires": [
            [
                "7738d9f2c2d896c0",
                "182b768af015a078"
            ]
        ]
    },
    {
        "id": "7544f802015e8c48",
        "type": "junction",
        "z": "b0836e657c45cee4",
        "g": "3387b5fb01dacd2d",
        "x": 180,
        "y": 2000,
        "wires": [
            [
                "661c02a18f849ee6"
            ]
        ]
    },
    {
        "id": "983d6a50321671e7",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "8f6c75aaad6009a5",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": 8086,
        "protocol": "http",
        "database": "database",
        "name": "myinfluxdb",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://influxdb:8086",
        "timeout": 10,
        "rejectUnauthorized": true
    },
    {
        "id": "79aaa793b17a47c6",
        "type": "MySQLdatabase",
        "name": "",
        "host": "mariadb",
        "port": "3306",
        "db": "sample_db",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "fb17d1cbb12ca77b",
        "type": "switch",
        "z": "9c93b5a27f1f0d8c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "array",
                "vt": "array"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 150,
        "y": 120,
        "wires": [
            [
                "612754f744d7df39"
            ],
            [
                "fc2aa30ba24d6a60"
            ]
        ]
    },
    {
        "id": "612754f744d7df39",
        "type": "split",
        "z": "9c93b5a27f1f0d8c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 310,
        "y": 100,
        "wires": [
            [
                "427bd8d015228387"
            ]
        ]
    },
    {
        "id": "427bd8d015228387",
        "type": "delay",
        "z": "9c93b5a27f1f0d8c",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "38683cb766280f58",
        "type": "function",
        "z": "c86be1c12bedf207",
        "name": "乱数生成",
        "func": "msg.random = Math.random();\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 120,
        "wires": [
            [
                "0a5cc48edb8299a5"
            ]
        ]
    },
    {
        "id": "49af70dc50fe7a27",
        "type": "switch",
        "z": "c86be1c12bedf207",
        "name": "閾値と比較",
        "property": "random",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "threshold",
                "vt": "env"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 120,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "0a5cc48edb8299a5",
        "type": "change",
        "z": "c86be1c12bedf207",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "threshold",
                "pt": "msg",
                "to": "threshold",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 120,
        "wires": [
            [
                "49af70dc50fe7a27"
            ]
        ]
    },
    {
        "id": "bdd72ea00d37c2ea",
        "type": "join",
        "z": "af1f1e0a0e3be714",
        "name": "join records",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "${ChunkSize}",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 590,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6a3c433f2e8ca3ca",
        "type": "change",
        "z": "af1f1e0a0e3be714",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "complete",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 120,
        "wires": [
            [
                "bdd72ea00d37c2ea"
            ]
        ]
    },
    {
        "id": "21b1e0ac64062ea9",
        "type": "trigger",
        "z": "af1f1e0a0e3be714",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "${WaitSeconds}",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 200,
        "y": 120,
        "wires": [
            [
                "6a3c433f2e8ca3ca"
            ]
        ]
    },
    {
        "id": "fbe42d48d5ef483c",
        "type": "http in",
        "z": "f0020e205b0d4d02",
        "name": "",
        "url": "/users/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "1a83e88eede0b665"
            ]
        ]
    },
    {
        "id": "63006f01d2cea77f",
        "type": "http response",
        "z": "f0020e205b0d4d02",
        "name": "http out",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 800,
        "y": 380,
        "wires": []
    },
    {
        "id": "5ecc383de041ac9c",
        "type": "inject",
        "z": "f0020e205b0d4d02",
        "name": "Initialize users table once",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 840,
        "wires": [
            [
                "02409b95bf14a835"
            ]
        ]
    },
    {
        "id": "b673cdc6486e25e2",
        "type": "alafile in",
        "z": "f0020e205b0d4d02",
        "name": "load users",
        "filename": "/data/db/users",
        "format": "json",
        "columns": "*",
        "headers": true,
        "x": 230,
        "y": 960,
        "wires": [
            [
                "0b17f4d4a55aad81"
            ]
        ]
    },
    {
        "id": "808645ce3216d769",
        "type": "alafile out",
        "z": "f0020e205b0d4d02",
        "name": "save users",
        "filename": "/data/db/users",
        "format": "json",
        "columns": "*",
        "headers": true,
        "x": 670,
        "y": 540,
        "wires": []
    },
    {
        "id": "e6f213ee7e16ccf9",
        "type": "alasql",
        "z": "f0020e205b0d4d02",
        "name": "insert user",
        "query": "INSERT INTO users VALUES ?;\n",
        "x": 510,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "15dc322bac7b10d3",
        "type": "alasql",
        "z": "f0020e205b0d4d02",
        "name": "insert user",
        "query": "INSERT INTO users VALUES ?;\n",
        "x": 610,
        "y": 480,
        "wires": [
            [
                "dbea0c798f2b0956",
                "eea38a64978c09d0"
            ]
        ]
    },
    {
        "id": "6e01fcc108b4a04c",
        "type": "inject",
        "z": "f0020e205b0d4d02",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 740,
        "wires": [
            [
                "864e281a4164e85c"
            ]
        ]
    },
    {
        "id": "3a6ffa808977b42e",
        "type": "debug",
        "z": "f0020e205b0d4d02",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 700,
        "wires": []
    },
    {
        "id": "864e281a4164e85c",
        "type": "alasql",
        "z": "f0020e205b0d4d02",
        "name": "select users",
        "query": "SELECT * FROM users",
        "x": 330,
        "y": 740,
        "wires": [
            [
                "3a6ffa808977b42e"
            ]
        ]
    },
    {
        "id": "2392a3572cdbbde9",
        "type": "inject",
        "z": "f0020e205b0d4d02",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 700,
        "wires": [
            [
                "c73d3a9bed98a7e7"
            ]
        ]
    },
    {
        "id": "c73d3a9bed98a7e7",
        "type": "alasql",
        "z": "f0020e205b0d4d02",
        "name": "truncate users",
        "query": "truncate table users",
        "x": 340,
        "y": 700,
        "wires": [
            [
                "3a6ffa808977b42e"
            ]
        ]
    },
    {
        "id": "02409b95bf14a835",
        "type": "alasql",
        "z": "f0020e205b0d4d02",
        "name": "create users table",
        "query": "CREATE TABLE IF NOT EXISTS users (id integer, name string, age integer);\n",
        "x": 190,
        "y": 900,
        "wires": [
            [
                "e1da3ddd375d9a5e"
            ]
        ]
    },
    {
        "id": "beac62771396e295",
        "type": "function",
        "z": "f0020e205b0d4d02",
        "name": "make new user",
        "func": "const users = msg.payload;\nconst body = msg.req.body;\nconst maxId = users.length==0 ? 0 : Math.max(...users.map(user => user.id));\nconst user = {\n    id: maxId + 1,\n    name: body.name,\n    age: Number(body.age)\n}\nmsg.inserted_user = user;\nmsg.payload = user;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 480,
        "wires": [
            [
                "15dc322bac7b10d3"
            ]
        ]
    },
    {
        "id": "86f4c0403449a746",
        "type": "alasql",
        "z": "f0020e205b0d4d02",
        "name": "select users",
        "query": "SELECT * FROM users",
        "x": 270,
        "y": 480,
        "wires": [
            [
                "beac62771396e295"
            ]
        ]
    },
    {
        "id": "86870e41ccbdc6f9",
        "type": "http in",
        "z": "f0020e205b0d4d02",
        "name": "",
        "url": "users",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 480,
        "wires": [
            [
                "86f4c0403449a746"
            ]
        ]
    },
    {
        "id": "dbea0c798f2b0956",
        "type": "change",
        "z": "f0020e205b0d4d02",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "inserted_user",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 440,
        "wires": [
            [
                "63006f01d2cea77f"
            ]
        ]
    },
    {
        "id": "eea38a64978c09d0",
        "type": "alasql",
        "z": "f0020e205b0d4d02",
        "name": "select users",
        "query": "SELECT * FROM users",
        "x": 490,
        "y": 540,
        "wires": [
            [
                "808645ce3216d769"
            ]
        ]
    },
    {
        "id": "0b17f4d4a55aad81",
        "type": "split",
        "z": "f0020e205b0d4d02",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 370,
        "y": 960,
        "wires": [
            [
                "e6f213ee7e16ccf9"
            ]
        ]
    },
    {
        "id": "e1da3ddd375d9a5e",
        "type": "alasql",
        "z": "f0020e205b0d4d02",
        "name": "truncate users",
        "query": "truncate table users",
        "x": 380,
        "y": 900,
        "wires": [
            [
                "b673cdc6486e25e2"
            ]
        ]
    },
    {
        "id": "37982cd980132310",
        "type": "alasql",
        "z": "f0020e205b0d4d02",
        "name": "select users",
        "query": "SELECT * FROM users",
        "x": 270,
        "y": 380,
        "wires": [
            [
                "63006f01d2cea77f"
            ]
        ]
    },
    {
        "id": "901508bf3893668e",
        "type": "http in",
        "z": "f0020e205b0d4d02",
        "name": "",
        "url": "/users/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 380,
        "wires": [
            [
                "37982cd980132310"
            ]
        ]
    },
    {
        "id": "0d1a89fd9063b649",
        "type": "alasql",
        "z": "f0020e205b0d4d02",
        "name": "select users",
        "query": "SELECT * FROM users \nWHERE id = ?;\n",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "39fd09aa89ef018e"
            ]
        ]
    },
    {
        "id": "cd52890164626986",
        "type": "change",
        "z": "f0020e205b0d4d02",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 280,
        "wires": [
            [
                "63006f01d2cea77f"
            ]
        ]
    },
    {
        "id": "1a83e88eede0b665",
        "type": "change",
        "z": "f0020e205b0d4d02",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$number(req.params.id)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 220,
        "wires": [
            [
                "0d1a89fd9063b649"
            ]
        ]
    },
    {
        "id": "39fd09aa89ef018e",
        "type": "switch",
        "z": "f0020e205b0d4d02",
        "name": "ユーザが見つかったか",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 320,
        "y": 280,
        "wires": [
            [
                "cd52890164626986"
            ],
            [
                "3291ed591c8da581"
            ]
        ]
    },
    {
        "id": "3291ed591c8da581",
        "type": "change",
        "z": "f0020e205b0d4d02",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "404",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"error\":\"Not found user\",\"status\":404}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 320,
        "wires": [
            [
                "63006f01d2cea77f"
            ]
        ]
    },
    {
        "id": "46c2ca2a51493a72",
        "type": "inject",
        "z": "b0836e657c45cee4",
        "g": "3742ce3df21d5969",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "bf6458ec5f555f70"
            ]
        ]
    },
    {
        "id": "bf6458ec5f555f70",
        "type": "change",
        "z": "b0836e657c45cee4",
        "g": "3742ce3df21d5969",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Taro",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 80,
        "wires": [
            [
                "296118de600e8210"
            ]
        ]
    },
    {
        "id": "296118de600e8210",
        "type": "link call",
        "z": "b0836e657c45cee4",
        "g": "3742ce3df21d5969",
        "name": "",
        "links": [
            "f65164460314ac82"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 540,
        "y": 80,
        "wires": [
            [
                "9b34839620502d83"
            ]
        ]
    },
    {
        "id": "9b34839620502d83",
        "type": "debug",
        "z": "b0836e657c45cee4",
        "g": "3742ce3df21d5969",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 80,
        "wires": []
    },
    {
        "id": "f65164460314ac82",
        "type": "link in",
        "z": "b0836e657c45cee4",
        "g": "b0568bb261bbf464",
        "name": "func length",
        "links": [],
        "x": 105,
        "y": 280,
        "wires": [
            [
                "6dbe6d628991d545"
            ]
        ]
    },
    {
        "id": "6dbe6d628991d545",
        "type": "function",
        "z": "b0836e657c45cee4",
        "g": "b0568bb261bbf464",
        "name": "function 1",
        "func": "msg.payload = msg.payload.length;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 280,
        "wires": [
            [
                "e58e2a758922ba40"
            ]
        ]
    },
    {
        "id": "e58e2a758922ba40",
        "type": "link out",
        "z": "b0836e657c45cee4",
        "g": "b0568bb261bbf464",
        "name": "link out 1",
        "mode": "return",
        "links": [],
        "x": 325,
        "y": 280,
        "wires": []
    },
    {
        "id": "e3a6bff644fad890",
        "type": "debug",
        "z": "b0836e657c45cee4",
        "g": "391962ef9f3f92d1",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 180,
        "wires": []
    },
    {
        "id": "bc1f2932862bd4bd",
        "type": "link call",
        "z": "b0836e657c45cee4",
        "g": "391962ef9f3f92d1",
        "name": "",
        "links": [
            "f65164460314ac82"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 540,
        "y": 180,
        "wires": [
            [
                "e3a6bff644fad890"
            ]
        ]
    },
    {
        "id": "db45b42e1f0f65b8",
        "type": "change",
        "z": "b0836e657c45cee4",
        "g": "391962ef9f3f92d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Saburo",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 180,
        "wires": [
            [
                "bc1f2932862bd4bd"
            ]
        ]
    },
    {
        "id": "21ff19d41a20ceb1",
        "type": "inject",
        "z": "b0836e657c45cee4",
        "g": "391962ef9f3f92d1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 180,
        "wires": [
            [
                "db45b42e1f0f65b8"
            ]
        ]
    },
    {
        "id": "019b7347b3689076",
        "type": "inject",
        "z": "b0836e657c45cee4",
        "g": "e24847f2f9e351d8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 400,
        "wires": [
            [
                "41d09822f1916789"
            ]
        ]
    },
    {
        "id": "41d09822f1916789",
        "type": "function",
        "z": "b0836e657c45cee4",
        "g": "e24847f2f9e351d8",
        "name": "Define utils",
        "func": "const utils = {\n    length: (x) => x.length,\n    ohire: (s) => s + \"***\",\n};\nflow.set(\"utils\", utils);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "b91128fcf9ee2c2b",
        "type": "inject",
        "z": "b0836e657c45cee4",
        "g": "e24847f2f9e351d8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Taro",
        "payloadType": "str",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "c42c1e1ec887fe6c"
            ]
        ]
    },
    {
        "id": "c42c1e1ec887fe6c",
        "type": "function",
        "z": "b0836e657c45cee4",
        "g": "e24847f2f9e351d8",
        "name": "Use utils",
        "func": "const { length, ohire } = flow.get(\"utils\");\n\nconst s = msg.payload;\nmsg.payload = {\n    target: s,\n    len: length(s),\n    ohi: ohire(s),\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 460,
        "wires": [
            [
                "e6bfd74bb3e69eaa"
            ]
        ]
    },
    {
        "id": "e6bfd74bb3e69eaa",
        "type": "debug",
        "z": "b0836e657c45cee4",
        "g": "e24847f2f9e351d8",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 460,
        "wires": []
    },
    {
        "id": "abe75cd6b803d317",
        "type": "inject",
        "z": "b0836e657c45cee4",
        "g": "672e1650cb510dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[1, 2, 3]",
        "payloadType": "json",
        "x": 130,
        "y": 560,
        "wires": [
            [
                "03c7cc1007694929"
            ]
        ]
    },
    {
        "id": "03c7cc1007694929",
        "type": "subflow:9c93b5a27f1f0d8c",
        "z": "b0836e657c45cee4",
        "g": "672e1650cb510dd9",
        "name": "",
        "x": 410,
        "y": 560,
        "wires": [
            [
                "c9ecd84f167b1985"
            ]
        ]
    },
    {
        "id": "c9ecd84f167b1985",
        "type": "debug",
        "z": "b0836e657c45cee4",
        "g": "672e1650cb510dd9",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 560,
        "wires": []
    },
    {
        "id": "b53f20d28cf93a9f",
        "type": "inject",
        "z": "b0836e657c45cee4",
        "g": "672e1650cb510dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 620,
        "wires": [
            [
                "03c7cc1007694929"
            ]
        ]
    },
    {
        "id": "6ce15e22118b34e0",
        "type": "inject",
        "z": "b0836e657c45cee4",
        "g": "34acfae8448b43ac",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 740,
        "wires": [
            [
                "1432fa1fe7c34b5b",
                "28d9a5423150e4f2"
            ]
        ]
    },
    {
        "id": "2f745ae3548ce99d",
        "type": "http in",
        "z": "b0836e657c45cee4",
        "g": "132c0b5e6a93589a",
        "name": "",
        "url": "echo",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1100,
        "wires": [
            [
                "89af74664eafcbb8"
            ]
        ]
    },
    {
        "id": "89af74664eafcbb8",
        "type": "function",
        "z": "b0836e657c45cee4",
        "g": "132c0b5e6a93589a",
        "name": "ランダムな遅延時間を設定",
        "func": "const name = msg.req.query.name;\nconst delay = Math.floor(Math.random() * 5 + 1) * 500;\nmsg.payload = {\n    name: name,\n    delay: delay,\n};\nmsg.delay = delay;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1100,
        "wires": [
            [
                "ac66534468c23087"
            ]
        ]
    },
    {
        "id": "10fc73cf7410db30",
        "type": "http response",
        "z": "b0836e657c45cee4",
        "g": "132c0b5e6a93589a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 730,
        "y": 1100,
        "wires": []
    },
    {
        "id": "213d69f0941b223e",
        "type": "http request",
        "z": "b0836e657c45cee4",
        "g": "313dbed4f7397e56",
        "name": "fetch api: echo",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "query",
        "url": "localhost:1880/api/echo",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 740,
        "y": 880,
        "wires": [
            [
                "32a444f412de407d"
            ]
        ]
    },
    {
        "id": "e7ec474e6c7b0546",
        "type": "debug",
        "z": "b0836e657c45cee4",
        "g": "34acfae8448b43ac",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 880,
        "wires": []
    },
    {
        "id": "ac66534468c23087",
        "type": "delay",
        "z": "b0836e657c45cee4",
        "g": "132c0b5e6a93589a",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 580,
        "y": 1100,
        "wires": [
            [
                "10fc73cf7410db30"
            ]
        ]
    },
    {
        "id": "1432fa1fe7c34b5b",
        "type": "file in",
        "z": "b0836e657c45cee4",
        "g": "34acfae8448b43ac",
        "name": "read names",
        "filename": "/data/names.csv",
        "filenameType": "str",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 270,
        "y": 740,
        "wires": [
            [
                "d047e55d49c4f7c3"
            ]
        ]
    },
    {
        "id": "7738d9f2c2d896c0",
        "type": "function",
        "z": "b0836e657c45cee4",
        "g": "313dbed4f7397e56",
        "name": "queue",
        "func": "// キューの初期化要請\nif(msg.reset){\n    context.set(\"queue\", []);\n    context.set(\"running\", false);\n    return;\n}\n\nconst q = context.get(\"queue\");\n\n// 後続処理の完了通知：キューが空でなければ先頭要素を放出する\nif(msg.done){\n    if(q.length > 0){\n        const [next_msg, ...rest] = q;\n        context.set(\"queue\", rest);\n        return next_msg;\n    }\n    else{\n        context.set(\"running\", false);\n        return;\n    }\n}\n// 新規メッセージの投入：処理中のメッセージがあればキューに追加し、なければそのまま流す\nelse{\n    const running = context.get(\"running\");\n    if(running){\n        context.set(\"queue\", [...q, msg]);\n        return;\n    }\n    else{\n        context.set(\"running\", true);\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 880,
        "wires": [
            [
                "659da199870741a3",
                "f4353e4389a6bc05"
            ]
        ]
    },
    {
        "id": "f10122392cbe2923",
        "type": "change",
        "z": "b0836e657c45cee4",
        "g": "313dbed4f7397e56",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "done",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 880,
        "wires": [
            [
                "e7ec474e6c7b0546",
                "31b26389a929d61d"
            ]
        ]
    },
    {
        "id": "32a444f412de407d",
        "type": "json",
        "z": "b0836e657c45cee4",
        "g": "313dbed4f7397e56",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 890,
        "y": 880,
        "wires": [
            [
                "f10122392cbe2923"
            ]
        ]
    },
    {
        "id": "d07730c58261e945",
        "type": "debug",
        "z": "b0836e657c45cee4",
        "g": "34acfae8448b43ac",
        "name": "debug 10",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 720,
        "wires": []
    },
    {
        "id": "28d9a5423150e4f2",
        "type": "change",
        "z": "b0836e657c45cee4",
        "g": "313dbed4f7397e56",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 880,
        "wires": [
            [
                "31b26389a929d61d"
            ]
        ]
    },
    {
        "id": "182b768af015a078",
        "type": "debug",
        "z": "b0836e657c45cee4",
        "g": "34acfae8448b43ac",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 1000,
        "wires": []
    },
    {
        "id": "cd11cda063995142",
        "type": "comment",
        "z": "b0836e657c45cee4",
        "g": "34acfae8448b43ac",
        "name": "現在の実装では、初期化した時に既に処理中のメッセージまではキャンセルできない",
        "info": "",
        "x": 360,
        "y": 960,
        "wires": []
    },
    {
        "id": "d047e55d49c4f7c3",
        "type": "switch",
        "z": "b0836e657c45cee4",
        "g": "34acfae8448b43ac",
        "name": "空行除去",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 420,
        "y": 740,
        "wires": [
            [
                "d07730c58261e945"
            ],
            [
                "31b26389a929d61d"
            ]
        ]
    },
    {
        "id": "659da199870741a3",
        "type": "function",
        "z": "b0836e657c45cee4",
        "g": "313dbed4f7397e56",
        "name": "function 2",
        "func": "msg.payload = { name: msg.payload };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 880,
        "wires": [
            [
                "213d69f0941b223e"
            ]
        ]
    },
    {
        "id": "f4353e4389a6bc05",
        "type": "debug",
        "z": "b0836e657c45cee4",
        "g": "34acfae8448b43ac",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 1000,
        "wires": []
    },
    {
        "id": "3cd70725ab98a113",
        "type": "inject",
        "z": "b0836e657c45cee4",
        "g": "394b52483367cb8a",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 1240,
        "wires": [
            [
                "f77139e06707cd63"
            ]
        ]
    },
    {
        "id": "f77139e06707cd63",
        "type": "subflow:c86be1c12bedf207",
        "z": "b0836e657c45cee4",
        "g": "394b52483367cb8a",
        "name": "",
        "env": [
            {
                "name": "threshold",
                "value": "0.8",
                "type": "num"
            },
            {
                "name": "出力1の確率",
                "value": "0.7",
                "type": "num"
            }
        ],
        "x": 290,
        "y": 1240,
        "wires": [
            [
                "681e74f1c9d9e169"
            ],
            [
                "73346b1b78175063"
            ]
        ]
    },
    {
        "id": "681e74f1c9d9e169",
        "type": "debug",
        "z": "b0836e657c45cee4",
        "g": "394b52483367cb8a",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 1220,
        "wires": []
    },
    {
        "id": "73346b1b78175063",
        "type": "debug",
        "z": "b0836e657c45cee4",
        "g": "394b52483367cb8a",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 1260,
        "wires": []
    },
    {
        "id": "29c9add31fba7dba",
        "type": "inject",
        "z": "b0836e657c45cee4",
        "g": "4f84f1b07d401ac0",
        "name": "timestamp",
        "props": [
            {
                "p": "now",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 1360,
        "wires": [
            [
                "cb979098d1b6e20e"
            ]
        ]
    },
    {
        "id": "c959bfd6efc54e9e",
        "type": "yaml",
        "z": "b0836e657c45cee4",
        "g": "4f84f1b07d401ac0",
        "property": "payload",
        "name": "",
        "x": 490,
        "y": 1360,
        "wires": [
            [
                "eb42074c43e33963"
            ]
        ],
        "info": "想定するyamlの構造は次のとおり。\n\n```yaml\n<ip_addr>:\n    port: <port>\n    sensor_devices:\n        - no: <device number>\n          words: <words of data>\n          sensor_id: <sensor id>\n```\n接続先であるコントローラーの数だけIPアドレスがあり、\nその要素としてポート番号とセンサーデバイス一覧がある。\n一覧の各要素はデバイス番号、ワード数、センサーIDの\n３つの値で構成される。\n"
    },
    {
        "id": "cb979098d1b6e20e",
        "type": "file in",
        "z": "b0836e657c45cee4",
        "g": "4f84f1b07d401ac0",
        "name": "",
        "filename": "/data/controllers.yml",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 320,
        "y": 1360,
        "wires": [
            [
                "c959bfd6efc54e9e"
            ]
        ]
    },
    {
        "id": "eb42074c43e33963",
        "type": "split",
        "z": "b0836e657c45cee4",
        "g": "4f84f1b07d401ac0",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 610,
        "y": 1360,
        "wires": [
            [
                "adaabcbd1c6bf857"
            ]
        ]
    },
    {
        "id": "e8abd482379157a9",
        "type": "debug",
        "z": "b0836e657c45cee4",
        "g": "4f84f1b07d401ac0",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1440,
        "wires": []
    },
    {
        "id": "ce603c74cfd2b2c6",
        "type": "function",
        "z": "b0836e657c45cee4",
        "g": "c7e294783d9ae989",
        "name": "loop制御",
        "func": "if(msg.loop === undefined){\n    const {ip_addr, port, sensor_devices} = msg.payload;\n    msg.loop = {\n        i: 0,\n        ip_addr,\n        port,\n        sensor_devices,\n    };\n}\nelse{\n    const { i, sensor_devices } = msg.loop;\n    const len = sensor_devices.length;\n    const next = i + 1;\n    if (len === next) {\n        return;\n    }\n\n    msg.loop.i = next;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 1540,
        "wires": [
            [
                "2aac94f929500237"
            ]
        ]
    },
    {
        "id": "2aac94f929500237",
        "type": "function",
        "z": "b0836e657c45cee4",
        "g": "c7e294783d9ae989",
        "name": "set query param",
        "func": "const { i, ip_addr, port, sensor_devices} = msg.loop;\nconst device = sensor_devices[i];\nmsg.payload = { name: `[${ip_addr}:${port}] ${device.no} ${device.words}` };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1540,
        "wires": [
            [
                "3af0cc66b6fa945c"
            ]
        ]
    },
    {
        "id": "3af0cc66b6fa945c",
        "type": "http request",
        "z": "b0836e657c45cee4",
        "g": "c7e294783d9ae989",
        "name": "fetch api: echo",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "query",
        "url": "localhost:1880/api/echo",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 580,
        "y": 1540,
        "wires": [
            [
                "ce603c74cfd2b2c6",
                "85735abab5441dda"
            ]
        ]
    },
    {
        "id": "a5da87b670473d47",
        "type": "json",
        "z": "b0836e657c45cee4",
        "g": "4f84f1b07d401ac0",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 1440,
        "wires": [
            [
                "c8898764c93c04b3"
            ]
        ]
    },
    {
        "id": "773d0b975cf9680c",
        "type": "link in",
        "z": "b0836e657c45cee4",
        "name": "link in 1",
        "links": [],
        "x": -25,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "206adcc2f3ffe981",
        "type": "link in",
        "z": "b0836e657c45cee4",
        "g": "c7e294783d9ae989",
        "name": "loop for devices",
        "links": [],
        "x": 105,
        "y": 1540,
        "wires": [
            [
                "ce603c74cfd2b2c6"
            ]
        ]
    },
    {
        "id": "85735abab5441dda",
        "type": "link out",
        "z": "b0836e657c45cee4",
        "g": "c7e294783d9ae989",
        "name": "link out 2",
        "mode": "return",
        "links": [],
        "x": 715,
        "y": 1540,
        "wires": []
    },
    {
        "id": "adaabcbd1c6bf857",
        "type": "link call",
        "z": "b0836e657c45cee4",
        "g": "4f84f1b07d401ac0",
        "name": "",
        "links": [
            "206adcc2f3ffe981"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 220,
        "y": 1440,
        "wires": [
            [
                "a5da87b670473d47"
            ]
        ]
    },
    {
        "id": "c8898764c93c04b3",
        "type": "function",
        "z": "b0836e657c45cee4",
        "g": "4f84f1b07d401ac0",
        "name": "payload整理",
        "func": "msg.payload.now = msg.now;\nconst {i, sensor_devices} = msg.loop;\nmsg.payload.sensor_id = sensor_devices[i].sensor_id;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1440,
        "wires": [
            [
                "e8abd482379157a9"
            ]
        ]
    },
    {
        "id": "afcb18c873db5d92",
        "type": "aedes broker",
        "z": "b0836e657c45cee4",
        "g": "d1ede63e629f3ab0",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "persistence_bind": "memory",
        "dburl": "",
        "usetls": false,
        "x": 650,
        "y": 1880,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "5baf71921ad8f87e",
        "type": "mqtt in",
        "z": "b0836e657c45cee4",
        "g": "646683b4ad391d0c",
        "name": "",
        "topic": "test/io",
        "qos": "2",
        "datatype": "json",
        "broker": "983d6a50321671e7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1880,
        "wires": [
            [
                "459a414946bf4a01"
            ]
        ]
    },
    {
        "id": "180ffc9d1ccb6136",
        "type": "debug",
        "z": "b0836e657c45cee4",
        "g": "646683b4ad391d0c",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 1880,
        "wires": []
    },
    {
        "id": "6d87100f5bcaa953",
        "type": "mqtt out",
        "z": "b0836e657c45cee4",
        "g": "4cc08fd169a79a42",
        "name": "",
        "topic": "test/io",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "983d6a50321671e7",
        "x": 670,
        "y": 1740,
        "wires": []
    },
    {
        "id": "8ff96bb61b8a35b2",
        "type": "inject",
        "z": "b0836e657c45cee4",
        "g": "d1ede63e629f3ab0",
        "name": "now",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1660,
        "wires": [
            [
                "068796fb50e7ab41"
            ]
        ]
    },
    {
        "id": "bcc6afefb9448c5f",
        "type": "join",
        "z": "b0836e657c45cee4",
        "g": "4cc08fd169a79a42",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 530,
        "y": 1740,
        "wires": [
            [
                "6d87100f5bcaa953"
            ]
        ]
    },
    {
        "id": "450f6137e4299ea7",
        "type": "debug",
        "z": "b0836e657c45cee4",
        "g": "d1ede63e629f3ab0",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1660,
        "wires": []
    },
    {
        "id": "664b967ceda1d7df",
        "type": "trigger",
        "z": "b0836e657c45cee4",
        "g": "4cc08fd169a79a42",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "num",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 190,
        "y": 1780,
        "wires": [
            [
                "4c398d084bdfdfdc"
            ]
        ]
    },
    {
        "id": "4c398d084bdfdfdc",
        "type": "change",
        "z": "b0836e657c45cee4",
        "g": "4cc08fd169a79a42",
        "name": "complete msg",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "complete",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 1780,
        "wires": [
            [
                "bcc6afefb9448c5f"
            ]
        ]
    },
    {
        "id": "068796fb50e7ab41",
        "type": "change",
        "z": "b0836e657c45cee4",
        "g": "d1ede63e629f3ab0",
        "name": "make payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"now\": payload,\t    \"name\": \"太郎\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 1660,
        "wires": [
            [
                "664b967ceda1d7df",
                "bcc6afefb9448c5f",
                "450f6137e4299ea7"
            ]
        ]
    },
    {
        "id": "459a414946bf4a01",
        "type": "split",
        "z": "b0836e657c45cee4",
        "g": "646683b4ad391d0c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 270,
        "y": 1880,
        "wires": [
            [
                "180ffc9d1ccb6136"
            ]
        ]
    },
    {
        "id": "6a7d01488da61c34",
        "type": "inject",
        "z": "b0836e657c45cee4",
        "g": "3387b5fb01dacd2d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "now",
                "v": "",
                "vt": "date"
            },
            {
                "p": "measurement",
                "v": "水温",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ {\"value\":12}, {\"area\": 1, \"device\":\"pump\"}]",
        "payloadType": "json",
        "x": 130,
        "y": 2000,
        "wires": [
            [
                "7544f802015e8c48"
            ]
        ]
    },
    {
        "id": "661c02a18f849ee6",
        "type": "influxdb out",
        "z": "b0836e657c45cee4",
        "g": "3387b5fb01dacd2d",
        "influxdb": "8f6c75aaad6009a5",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "org",
        "bucket": "measurements",
        "x": 550,
        "y": 2000,
        "wires": []
    },
    {
        "id": "21bfc3e854b9ad89",
        "type": "inject",
        "z": "b0836e657c45cee4",
        "g": "3387b5fb01dacd2d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "now",
                "v": "",
                "vt": "date"
            },
            {
                "p": "measurement",
                "v": "水温",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ {\"入口\":99, \"出口\": 90}, {\"area\": 1, \"device\":\"heat-pump\"}]",
        "payloadType": "json",
        "x": 130,
        "y": 2040,
        "wires": [
            [
                "7544f802015e8c48"
            ]
        ]
    },
    {
        "id": "c5fb1e57032e795f",
        "type": "change",
        "z": "b0836e657c45cee4",
        "g": "0052d4989496e2d8",
        "name": "to record",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[ sensor_id, now / 1000, payload.delay ]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 2420,
        "wires": [
            [
                "1063b456e28e48a7"
            ]
        ]
    },
    {
        "id": "f1f8a665a1dac732",
        "type": "json",
        "z": "b0836e657c45cee4",
        "g": "0052d4989496e2d8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 190,
        "y": 2380,
        "wires": [
            [
                "c5fb1e57032e795f"
            ]
        ]
    },
    {
        "id": "d664919f68f546aa",
        "type": "http request",
        "z": "b0836e657c45cee4",
        "g": "0052d4989496e2d8",
        "name": "同じip_addrの各deviceについて同期的に実行したい処理",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "query",
        "url": "localhost:1880/api/echo",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 610,
        "y": 2340,
        "wires": [
            [
                "f1f8a665a1dac732",
                "446f443d28107626"
            ]
        ]
    },
    {
        "id": "7241bdd76023aa5e",
        "type": "change",
        "z": "b0836e657c45cee4",
        "g": "0052d4989496e2d8",
        "name": "make query param",
        "rules": [
            {
                "t": "set",
                "p": "sensor_id",
                "pt": "msg",
                "to": "payload.sensor_id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"name\": payload.no & \" \" & payload.words & \"-> [\" & ip_addr & \":\" & port & \"]\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 2340,
        "wires": [
            [
                "d664919f68f546aa"
            ]
        ]
    },
    {
        "id": "2a1a8ed6ff72407f",
        "type": "loop",
        "z": "b0836e657c45cee4",
        "g": "0052d4989496e2d8",
        "name": "ip_addrあたりのsensor_devicesでループ",
        "kind": "enum",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "",
        "conditionType": "js",
        "when": "before",
        "enumeration": "payload.sensor_devices",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-val",
        "finalPayload": "final-count",
        "x": 300,
        "y": 2300,
        "wires": [
            [],
            [
                "7241bdd76023aa5e"
            ]
        ]
    },
    {
        "id": "95c025ffb63714dc",
        "type": "change",
        "z": "b0836e657c45cee4",
        "g": "0052d4989496e2d8",
        "name": "ip_addr, port退避",
        "rules": [
            {
                "t": "set",
                "p": "ip_addr",
                "pt": "msg",
                "to": "payload.ip_addr",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "payload.port",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 2260,
        "wires": [
            [
                "2a1a8ed6ff72407f"
            ]
        ]
    },
    {
        "id": "10df7dd44d95743b",
        "type": "split",
        "z": "b0836e657c45cee4",
        "g": "0052d4989496e2d8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 190,
        "y": 2220,
        "wires": [
            [
                "95c025ffb63714dc"
            ]
        ]
    },
    {
        "id": "139abe9fbf69808a",
        "type": "inject",
        "z": "b0836e657c45cee4",
        "g": "0052d4989496e2d8",
        "name": "timestamp",
        "props": [
            {
                "p": "now",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 2140,
        "wires": [
            [
                "56a0ace550412e9d"
            ]
        ]
    },
    {
        "id": "334a4aee6c6add83",
        "type": "inject",
        "z": "b0836e657c45cee4",
        "g": "0cd868fae7fb89ef",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 2580,
        "wires": [
            [
                "3ca52c402e3ea9ec"
            ]
        ]
    },
    {
        "id": "1ede4140a65d8d64",
        "type": "split",
        "z": "b0836e657c45cee4",
        "g": "0cd868fae7fb89ef",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 390,
        "y": 2580,
        "wires": [
            [
                "a43b008f6a63d31f"
            ]
        ]
    },
    {
        "id": "a43b008f6a63d31f",
        "type": "change",
        "z": "b0836e657c45cee4",
        "g": "0cd868fae7fb89ef",
        "name": "to record",
        "rules": [
            {
                "t": "set",
                "p": "now",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[ payload, now / 1000, $random() * 10 ]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 2580,
        "wires": [
            [
                "1063b456e28e48a7"
            ]
        ]
    },
    {
        "id": "3ca52c402e3ea9ec",
        "type": "function",
        "z": "b0836e657c45cee4",
        "g": "0cd868fae7fb89ef",
        "name": "make IDs",
        "func": "msg.payload = [...Array(100)].map((_, i) => 330+i);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 2580,
        "wires": [
            [
                "1ede4140a65d8d64"
            ]
        ]
    },
    {
        "id": "1063b456e28e48a7",
        "type": "subflow:af1f1e0a0e3be714",
        "z": "b0836e657c45cee4",
        "g": "0052d4989496e2d8",
        "name": "",
        "x": 200,
        "y": 2460,
        "wires": [
            [
                "c66768b2e751f3ba"
            ]
        ]
    },
    {
        "id": "56a0ace550412e9d",
        "type": "template",
        "z": "b0836e657c45cee4",
        "g": "0052d4989496e2d8",
        "name": "controllers定義",
        "field": "payload",
        "fieldType": "msg",
        "format": "yaml",
        "syntax": "plain",
        "template": "central:\n  ip_addr: 192.168.1.100\n  port: 8080\n  sensor_devices:\n    - {no: R001, words: 1, sensor_id: 101001}\n    - {no: R002, words: 1, sensor_id: 101002}\n    - {no: MD001, words: 2, sensor_id: 102001}\narea1:\n  ip_addr: 192.168.1.101\n  port: 8080\n  sensor_devices:\n    - {no: R001, words: 1, sensor_id: 201001}\n    - {no: MD001, words: 2, sensor_id: 202001}\n    - {no: MD002, words: 6, sensor_id: 202002}\narea2:\n  ip_addr: 192.168.1.102\n  port: 18080\n  sensor_devices:\n    - {no: R001, words: 1, sensor_id: 301001}\n    - {no: MD001, words: 2, sensor_id: 302001}\n",
        "output": "yaml",
        "x": 220,
        "y": 2180,
        "wires": [
            [
                "10df7dd44d95743b"
            ]
        ]
    },
    {
        "id": "446f443d28107626",
        "type": "link out",
        "z": "b0836e657c45cee4",
        "g": "0052d4989496e2d8",
        "name": "loop end",
        "mode": "link",
        "links": [
            "9b308c514c03d7f8"
        ],
        "x": 875,
        "y": 2340,
        "wires": []
    },
    {
        "id": "9b308c514c03d7f8",
        "type": "link in",
        "z": "b0836e657c45cee4",
        "g": "0052d4989496e2d8",
        "name": "next loop",
        "links": [
            "446f443d28107626"
        ],
        "x": 75,
        "y": 2300,
        "wires": [
            [
                "2a1a8ed6ff72407f"
            ]
        ]
    },
    {
        "id": "c66768b2e751f3ba",
        "type": "change",
        "z": "b0836e657c45cee4",
        "g": "0052d4989496e2d8",
        "name": "make SQL",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "INSERT INTO measurements(sensor_id, timestamp, value) VALUES ? ON DUPLICATE KEY UPDATE value = VALUES(value)",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[[ payload ]]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 2460,
        "wires": [
            [
                "386f5e9e47dabe16"
            ]
        ]
    },
    {
        "id": "386f5e9e47dabe16",
        "type": "mysql",
        "z": "b0836e657c45cee4",
        "g": "0052d4989496e2d8",
        "mydb": "79aaa793b17a47c6",
        "name": "insert to sample_db",
        "x": 660,
        "y": 2460,
        "wires": [
            [
                "96cb23b5c1d59c87"
            ]
        ]
    },
    {
        "id": "96cb23b5c1d59c87",
        "type": "debug",
        "z": "b0836e657c45cee4",
        "g": "0052d4989496e2d8",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 2460,
        "wires": []
    }
]